plugins {
    id "java"
    id 'maven'
    id 'application'
}

group 'my_map'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    //link to a local folders
    flatDir {
        dirs 'lib', 'lib/processing-3.2.1', 'lib/lib-extern'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '+'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '+'
    //libs from local folders
    compile name: 'core'
    //compile name: 'unfolding.0.9.6'
    compile name: 'unfolding.0.9.8beta'
    compile name: 'log4j-1.2.15'
    compile name: 'libTUIO'
    compile name: 'handy'
    compile name: 'json4processing'
    //support for OpenGl for different platforms
    compile name: 'gluegen-rt'
    compile name: 'jogl-all'
    //windows64
    compile name: 'jogl-all-natives-windows-amd64'
    compile name: 'gluegen-rt-natives-windows-amd64'
    //windows32
    compile name: 'jogl-all-natives-windows-i586'
    compile name: 'gluegen-rt-natives-windows-i586'
    //macosx
    compile name: 'jogl-all-natives-macosx-universal'
    compile name: 'gluegen-rt-natives-macosx-universal'
    //linux32
    compile name: 'jogl-all-natives-linux-i586'
    compile name: 'gluegen-rt-natives-linux-i586'
    //linux64
    compile name: 'jogl-all-natives-linux-amd64'
    compile name: 'gluegen-rt-natives-linux-amd64'
    //linux - armv6hf
    compile name: 'jogl-all-natives-linux-armv6hf'
    compile name: 'gluegen-rt-natives-linux-armv6hf'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

mainClassName = 'advanced.MapWithFeautures'

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'advanced.MapWithFeautures'
        )
    }
    from configurations.compile.collect { entry -> zipTree(entry) }
}
